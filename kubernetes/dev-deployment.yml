apiVersion: apps/v1
kind: Deployment
metadata:
  name: contactcentresvc
  labels:
    app: contactcentresvc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contactcentresvc
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: contactcentresvc
      labels:
        app: contactcentresvc
    spec:
      serviceAccountName: contactcentre-service
      terminationGracePeriodSeconds: 40
      volumes:
        - name: etc-config-uprn-vol
          configMap:
            name: uprn-blacklist-config
            items:
              - key: uprns
                path: blacklist
        - name: etc-config-keys-1
          secret:
            secretName: env-secrets
            items:
              - key: public-pgp-key-1
                path: public-pgp-key-1.pem
        - name: etc-config-keys-2
          secret:
            secretName: env-secrets
            items:
              - key: public-pgp-key-2
                path: public-pgp-key-2.pem
      containers:
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"
          - "-instances=sdc-cc-dev:europe-west2:cc-postgres-dev-6edd80d5=tcp:5432"
        securityContext:
          runAsNonRoot: true
        resources:
          requests:
            cpu:    "0.5"
            memory: "1Gi"
      - name: ccsvc
        image: europe-west2-docker.pkg.dev/ons-ci-int/int-docker-snapshot/cc-service:Use_latest_common
        imagePullPolicy: Always
        volumeMounts:
          - name: etc-config-uprn-vol
            mountPath: /etc/config-uprn
          - name: etc-config-ccs-vol
            mountPath: /etc/config
          - name: etc-config-keys-1
            mountPath: /etc/config-keys-1
          - name: etc-config-keys-2
            mountPath: /etc/config-keys-2
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sleep
              - "10"
        resources:
          requests:
            cpu: "0.5"
            memory: "1Gi"
          limits:
            cpu: "0.5"
            memory: "1Gi"
        readinessProbe:
          httpGet:
            path: /ccsvc/health/readiness
            port: 8171
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /ccsvc/health/liveness
            port: 8171
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /ccsvc/health/readiness
            port: 8171
          initialDelaySeconds: 5
          failureThreshold: 240
          periodSeconds: 10
        ports:
        - name: http-server
          containerPort: 8171
        env:
        - name: MANAGEMENT_METRICS_EXPORT_STACKDRIVER_ENABLED
          value: "false"
        - name: GOOGLE_CLOUD_PROJECT
          value: "sdc-cc-dev"
        - name: JAVA_TOOL_OPTIONS
          value: "-XX:+UseContainerSupport
            -XX:-OmitStackTraceInFastThrow
            -Dspring.profiles.active=dev"
        - name: FULFILMENTS_BLACKLISTED_CODES
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: fulfilments-blacklist
        - name: TELEPHONE_CAPTURE_DISABLED
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: telephone-capture-disabled
        - name: CLOUD_STORAGE_CASE_SCHEMA_NAME
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: cloud-storage-case-schema-name
        - name: SPRING_CLOUD_GCP_PUBSUB_PROJECTID
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: project-id
        - name: ADDRESS_INDEX_SETTINGS_REST_CLIENT_CONFIG_HOST
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: address-index-url
        - name: CASE_SERVICE_SETTINGS_REST_CLIENT_CONFIG_HOST
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: case-service-host
        - name: CASE_SERVICE_SETTINGS_REST_CLIENT_CONFIG_PORT
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: case-service-port
        - name: EQ_HOST
          valueFrom:
            configMapKeyRef:
              name: cc-config
              key: eq-host
        - name: CCDB_DATASOURCE_URL
          value: "jdbc:postgresql://localhost:5432/cc"
        - name: CCDB_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: CCDB_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: CCDB_ADMIN_DATASOURCE_URL
          value: "jdbc:postgresql://localhost:5432/cc"
        - name: CCDB_ADMIN_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: CCDB_ADMIN_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: KEYSTORE
          valueFrom:
            secretKeyRef:
              name: cc-keys
              key: cc-keys
        - name: PUBLIC_PGP_KEY1
          value: file:/etc/config-keys-1/public-pgp-key-1.pem
        - name: PUBLIC_PGP_KEY2
          value: file:/etc/config-keys-2/public-pgp-key-2.pem
        - name: EQ_RESPONSE_ID_SALT
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: response-id-salt
        - name: SURVEYS
            valueFrom:
              configMapKeyRef:
                name: cc-config
                key: surveys
